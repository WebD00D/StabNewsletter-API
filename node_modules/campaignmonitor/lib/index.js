'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BASE_URL = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var cov_2bubljchj4 = function () {
    var path = '/home/ubuntu/campaignmonitor-node/src/index.js',
        hash = '9bff8aadc1fbf42c4324450a86eb7d0c4d374585',
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/ubuntu/campaignmonitor-node/src/index.js',
        statementMap: {
            '0': {
                start: {
                    line: 4,
                    column: 24
                },
                end: {
                    line: 4,
                    column: 61
                }
            },
            '1': {
                start: {
                    line: 8,
                    column: 4
                },
                end: {
                    line: 11,
                    column: 19
                }
            },
            '2': {
                start: {
                    line: 14,
                    column: 29
                },
                end: {
                    line: 16,
                    column: 1
                }
            },
            '3': {
                start: {
                    line: 15,
                    column: 32
                },
                end: {
                    line: 15,
                    column: 63
                }
            }
        },
        fnMap: {
            '0': {
                name: 'addSubscriber',
                decl: {
                    start: {
                        line: 7,
                        column: 15
                    },
                    end: {
                        line: 7,
                        column: 28
                    }
                },
                loc: {
                    start: {
                        line: 7,
                        column: 53
                    },
                    end: {
                        line: 12,
                        column: 1
                    }
                },
                line: 7
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 14,
                        column: 15
                    },
                    end: {
                        line: 14,
                        column: 16
                    }
                },
                loc: {
                    start: {
                        line: 14,
                        column: 29
                    },
                    end: {
                        line: 16,
                        column: 1
                    }
                },
                line: 14
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 15,
                        column: 19
                    },
                    end: {
                        line: 15,
                        column: 20
                    }
                },
                loc: {
                    start: {
                        line: 15,
                        column: 32
                    },
                    end: {
                        line: 15,
                        column: 63
                    }
                },
                line: 15
            }
        },
        branchMap: {},
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0
        },
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

var _addSubscriber = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(options, listId, body) {
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        ++cov_2bubljchj4.f[0];
                        ++cov_2bubljchj4.s[1];
                        return _context.abrupt('return', _superagent2.default.post(BASE_URL + '/subscribers/' + listId + '.json').type('application/json').auth((0, _lodash.get)(options, 'apiKey') + ':empty-password').send(body));

                    case 3:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function _addSubscriber(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
    };
}();

var _lodash = require('lodash');

var _superagent = require('superagent');

var _superagent2 = _interopRequireDefault(_superagent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BASE_URL = exports.BASE_URL = (++cov_2bubljchj4.s[0], 'https://api.createsend.com/api/v3.1');

exports.default = function (options) {
    ++cov_2bubljchj4.f[1];
    ++cov_2bubljchj4.s[2];
    return {
        addSubscriber: function addSubscriber() {
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            ++cov_2bubljchj4.f[2];
            ++cov_2bubljchj4.s[3];
            return _addSubscriber.apply(undefined, [options].concat(args));
        }
    };
};
//# sourceMappingURL=index.js.map